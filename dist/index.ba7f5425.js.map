{"mappings":"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","sources":["sketch.js"],"sourcesContent":["\nvar color_bg, color_record, color_ortef_bg, color_ortef_text, color_track_name;\n\nvar nameColorPicker;\nvar backgroundColorPicker;\nvar nameColorPicker;\nvar recordBackgroundColorPicker;\nvar backgroundImageInput;\n\nvar trackName = generateRandomEnglishLikeWord(5);\nvar trackNameInput;\n\nvar patternGenerated = false;\n\nlet img;\nlet imgLoaded = false;\n\nlet COLS = createCols(\"https://coolors.co/eb300f-fe7688-fff566-212121-306e42-0d3b66\");\n\nfunction setup() {\n  let main_canvas = createCanvas(500, 500);\n  main_canvas.position(50, 50);\n  \n  backgroundImageMaskLayer = createGraphics(500, 500);\n  \n  color_bg = color(40,40,40);\n  color_record = generateRandomPastelColor();\n  color_ortef_bg = color(255,225,31);\n  color_ortef_text = color(0);\n  color_track_name = color(0);\n  \n  saveButton = createButton('EXPORT IMAGE');\n  saveButton.position(50, 575);\n  saveButton.mousePressed(saveImage);\n\n  trackNameInput = createInput(trackName);\n  trackNameInput.position(575, 70);\n  trackNameInputLabel = createP(\"TRACK NAME\");\n  trackNameInputLabel.position(575, 35);\n      \n  backgroundColorPicker = createColorPicker(color_bg);\n  backgroundColorPicker.position(575, 130);\n  backgroundColorPickerLabel = createP(\"MAIN BACKGROUND COLOR\");\n  backgroundColorPickerLabel.position(640, 127);\n  \n  nameColorPicker = createColorPicker(color_ortef_bg);\n  nameColorPicker.position(575, 180);\n  nameColorPickerLabel = createP(\"ORTEF BACKGROUND COLOR\");\n  nameColorPickerLabel.position(640, 177);\n  \n  recordBackgroundColorPicker = createColorPicker(color_record);\n  recordBackgroundColorPicker.position(575, 230);\n  recordBackgroundColorPickerLabel = createP(\"RECORD BACKGROUND COLOR\");\n  recordBackgroundColorPickerLabel.position(640, 227);\n  \n  trackNameColorPicker = createColorPicker(color_track_name);\n  trackNameColorPicker.position(575, 280);\n  trackNameColorPickerLabel = createP(\"TRACK NAME TEXT COLOR\");\n  trackNameColorPickerLabel.position(640, 277);\n  \n  applyButton = createButton('RANDOM TITLE');\n  applyButton.position(575, 345);\n  applyButton.mousePressed(randomizeTrackName);\n  \n  applyButton = createButton('RANDOM PATTERN');\n  applyButton.position(575, 455);\n  applyButton.mousePressed(generatePattern);\n  \n  applyButton = createButton('CLEAR PATTERN');\n  applyButton.position(575, 505);\n  applyButton.mousePressed(clearPattern);\n\n  input = createFileInput(handleFile);\n  input.position(575, 415);\n\n  layer1 = createGraphics(500, 500);\n  layer2 = createGraphics(500, 500);\n\n  // generatePattern();\n}\n\nfunction draw() {\n  noStroke();\n\n  if (!patternGenerated) {\n    background(recordBackgroundColorPicker.color());\n  }\n\n  layer1.noStroke();\n  layer2.noStroke();\n  layer2.clear();\n  layer2.textFont(\"Josefin Sans\");\n\n  layer1.background(backgroundColorPicker.color());\n  layer1.fill(0);\n  layer1.circle(250,250,450);\n  layer1.erase();\n  layer1.circle(250,250,430);\n  layer1.noErase();\n\n  layer2.fill(nameColorPicker.color());\n  layer2.rect(135,104,230,70);\n  \n  layer2.fill(color_ortef_text);\n  layer2.textSize(55);\n  layer2.textAlign(CENTER);\n  layer2.text('ORTEF', 250, 160);\n  \n  layer2.fill(trackNameColorPicker.color());\n  layer2.textSize(80);\n  layer2.textAlign(CENTER);\n  layer2.text(trackNameInput.value(), 250, 370);\n  \n  layer2.fill(lightenColor(recordBackgroundColorPicker.color(), -20));\n  layer2.circle(250,250,80);\n  if (imgLoaded){\n    image(img, 0, 0);\n  }\n  image(layer1, 0, 0);\n  image(layer2, 0, 0);\n  \n  fill(0);\n  circle(250,250,20);\n}\n\nfunction saveImage() {\n  save(trackNameInput.value()+\".png\");\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction clearPattern() {\n  patternGenerated = false;\n}\n\nfunction generatePattern(){\n  patternGenerated = true;\n  fill(0);\n  circle(250,250,450);\n  const patternSize = getRandomInt(5) + 5;\n  const record_color = recordBackgroundColorPicker.value();\n  PALETTE = [\n    colorToHex(lightenColor(record_color, -20)),\n    colorToHex(lightenColor(record_color, -40)),\n    colorToHex(lightenColor(record_color, -60))\n  ];\n  patternColors(PALETTE);\n  const t = width / patternSize;\n  // pattern(PTN.stripe(t / 10));\n  pattern(randPattern(t));\n  circlePattern(250, 250, 430);\n}\n\nfunction createCols(url)\n{\n\tlet slaIndex = url.lastIndexOf(\"/\");\n\tlet colStr = url.slice(slaIndex + 1);\n\tlet colArr = colStr.split(\"-\");\n\tfor(let i = 0; i < colArr.length; i++)colArr[i] = \"#\" + colArr[i];\n\treturn colArr;\n}\n\nfunction lightenColor(oldColor, amount) {\n  // Extract RGB components\n  let r = red(oldColor);\n  let g = green(oldColor);\n  let b = blue(oldColor);\n  \n  // Increase brightness\n  r += amount;\n  g += amount;\n  b += amount;\n  \n  // Ensure the values stay within the valid range (0-255)\n  r = constrain(r, 0, 255);\n  g = constrain(g, 0, 255);\n  b = constrain(b, 0, 255);\n  \n  // Return the new color\n  return color(r, g, b);\n}\n\nfunction colorToHex(color) {\n  // Extract RGB components\n  let r = red(color);\n  let g = green(color);\n  let b = blue(color);\n  \n  // Convert each component to hexadecimal and ensure two digits\n  let rHex = ('0' + r.toString(16)).slice(-2);\n  let gHex = ('0' + g.toString(16)).slice(-2);\n  let bHex = ('0' + b.toString(16)).slice(-2);\n  \n  // Concatenate and return the hexadecimal string\n  return \"#\" + rHex + gHex + bHex;\n}\n\nfunction randPattern(t)\n{\n\tconst ptArr = [\n    PTN.stripe(t),\n\t\tPTN.stripeCircle(t),\n    PTN.stripePolygon(int(random(3, 6)), t),\n\t\tPTN.stripeRadial(TAU /  int(random(6, 30))),\n\t\tPTN.wave(t / int(random(1, 3)), t / int(random(10, 20)), t / 5, t / 10),\n    PTN.dot(t, t / 2),\n\t\tPTN.checked(t, t),\n    PTN.cross(t, t / 8),\n\t\tPTN.triangle(t / int(random(1, 3)), t / int(random(1, 4))),\n\t]\n\treturn random(ptArr);\n}\n\n// Once the img element is created, use it to \n// convert the image element into a p5Image object. \nfunction imgCreated(){\n  img.hide();\n  // Create a temporary p5.Graphics object to draw the image.\n  let g = createGraphics(img.elt.width, img.elt.height);\n  g.image(img, 0, 0);\n  // Remove the original element from the DOM.\n  img.remove();\n  // g.get will return image data as a p5.Image object\n  img = g.get(0, 0, g.width, g.height)\n  \n  // Because we've converted it into a p5.Image object, we can\n  // use functions such as 'resize', and 'filter',\n  // which aren't available on the HTML img element.\n  // Uncomment the following lines for an example...\n  \n  /*\n  // Resize it to fill the canvas\n  if (img.width < img.height){\n    img.resize(width, 0);\n  } else {\n    img.resize(0, height);\n  }\n  \n  // Posterize and invert the colours\n  img.filter(POSTERIZE, 2);\n  img.filter(INVERT);\n  */\n\n  // Record that we have finished creating the image object.\n  imgLoaded = true;\n}\n\nfunction handleFile(file){\n  imgLoaded = false;\n  if (file.type === 'image') {\n    // Create the image as an img element. \n    // The 'imgCreated' function will be called when it\n    // is done, so we can convert it into a p5.Image object\n    img = createImg(\n      file.data, 'Alt text', 'anonymous', imgCreated);\n    img.hide();\n  } else {\n    img = null;\n  }\n}\n\nfunction generateRandomEnglishLikeWord() {\n  const vowels = 'AEIOU';\n  const consonants = 'BCDFGHJKLMNPQRSTVWXYZ';\n  let word = '';\n  let isVowel = Math.random() < 0.5; // Start with a vowel or consonant randomly\n  for (let i = 0; i < 5; i++) {\n    if (isVowel) {\n      word += vowels.charAt(Math.floor(Math.random() * vowels.length));\n    } else {\n      word += consonants.charAt(Math.floor(Math.random() * consonants.length));\n    }\n    isVowel = !isVowel; // Switch between vowel and consonant\n  }\n  return word;\n}\n\nfunction generateRandomPastelColor() {\n  // Generate random RGB values within a soft range\n  let r = random(200, 255);\n  let g = random(200, 255);\n  let b = random(200, 255);\n\n  // Ensure the colors are close in terms of brightness\n  let minColor = min(r, g, b);\n  r = lerp(r, minColor, 0.2);\n  g = lerp(g, minColor, 0.2);\n  b = lerp(b, minColor, 0.2);\n\n  // Return the color\n  return color(r, g, b);\n}\n\nfunction randomizeTrackName() {\n  trackNameInput.elt.value = generateRandomEnglishLikeWord();\n  if (patternGenerated) {\n    generatePattern();\n  }\n}\n"],"names":[],"version":3,"file":"index.ba7f5425.js.map","sourceRoot":"/__parcel_source_root/"}