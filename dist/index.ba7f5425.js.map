{"mappings":"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","sources":["sketch.js"],"sourcesContent":["\nvar color_bg, color_record, color_ortef_bg, color_ortef_text;\n\nvar nameColorPicker;\nvar backgroundColorPicker;\nvar nameColorPicker;\nvar recordBackgroundColorPicker;\nvar backgroundImageInput;\n\nvar trackName = \"SLEEV\";\nvar trackNameInput;\n\nvar patternSize = 200;\n\nlet COLS = createCols(\"https://coolors.co/eb300f-fe7688-fff566-212121-306e42-0d3b66\");\n\nfunction setup() {\n  console.log(COLS);\n\n  let main_canvas = createCanvas(500, 500);\n  main_canvas.position(50, 50);\n  \n  backgroundImageMaskLayer = createGraphics(500, 500);\n  \n  color_bg = color(40,40,40);\n  color_record = color(\"#fff\");\n  color_ortef_bg = color(230,180,30);\n  color_ortef_text = color(0);\n  \n  saveButton = createButton('EXPORT IMAGE');\n  saveButton.position(50, 575);\n  saveButton.mousePressed(saveImage);\n\n  trackNameInput = createInput(trackName);\n  trackNameInput.position(575, 70);\n  trackNameInputLabel = createP(\"TRACK NAME\");\n  trackNameInputLabel.position(575, 35);\n      \n  backgroundColorPicker = createColorPicker(color_bg);\n  backgroundColorPicker.position(575, 130);\n  backgroundColorPickerLabel = createP(\"MAIN BACKGROUND COLOR\");\n  backgroundColorPickerLabel.position(640, 127);\n  \n  nameColorPicker = createColorPicker(color_ortef_bg);\n  nameColorPicker.position(575, 180);\n  nameColorPickerLabel = createP(\"ORTEF BACKGROUND COLOR\");\n  nameColorPickerLabel.position(640, 177);\n  \n  recordBackgroundColorPicker = createColorPicker(color_record);\n  recordBackgroundColorPicker.position(575, 230);\n  recordBackgroundColorPickerLabel = createP(\"RECORD BACKGROUND COLOR\");\n  recordBackgroundColorPickerLabel.position(640, 227);\n  \n  applyButton = createButton('APPLY COLORS');\n  applyButton.position(575, 285);\n  applyButton.mousePressed(applyColors);\n\n  applyButton = createButton('RANDOM PATTERN');\n  applyButton.position(575, 455);\n  applyButton.mousePressed(generatePattern);\n  \n  applyButton = createButton('CLEAR PATTERN');\n  applyButton.position(575, 505);\n  applyButton.mousePressed(clearPattern);\n\n  textFont(\"Josefin Sans\");\n\n  background(backgroundColorPicker.color());\n\n  fill(0);\n  circle(250,250,450);\n\n  applyColors();\n}\n\nfunction draw() {\n  stroke(nameColorPicker.color());\n  fill(nameColorPicker.color());\n  rect(135,104,230,70);\n\n  fill(color_ortef_text);\n  stroke(color_ortef_text);\n  textSize(55);\n  textAlign(CENTER);\n  text('ORTEF', 250, 160);\n\n  textSize(80);\n  textAlign(CENTER);\n  text(trackNameInput.value(), 250, 370);\n\n  stroke(lightenColor(recordBackgroundColorPicker.color(), -20));\n  fill(lightenColor(recordBackgroundColorPicker.color(), -20));\n  circle(250,250,80);\n\n  stroke(0);\n  fill(0);\n  circle(250,250,20);\n\n  fill(0,0,0,0);\n  stroke(0);\n  circle(250,250,430);\n}\n\nfunction applyColors() {\n  fill(recordBackgroundColorPicker.color());\n  circle(250,250,430);\n}\n\nfunction saveImage() {\n  save(trackNameInput.value()+\".png\");\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction clearPattern() {\n  fill(recordBackgroundColorPicker.color());\n  circle(250,250,430);\n}\n\nfunction generatePattern(){\n  background(backgroundColorPicker.color());\n  fill(0);\n  circle(250,250,450);\n  const patternSize = getRandomInt(10);\n  const record_color = recordBackgroundColorPicker.value();\n  PALETTE = [\n    colorToHex(lightenColor(record_color, -20)),\n    colorToHex(lightenColor(record_color, -40)),\n    colorToHex(lightenColor(record_color, -60))\n  ];\n  patternColors(PALETTE);\n  const t = width / patternSize;\n  pattern(randPattern(100));\n  circlePattern(250, 250, 430);\n}\n\nfunction createCols(url)\n{\n\tlet slaIndex = url.lastIndexOf(\"/\");\n\tlet colStr = url.slice(slaIndex + 1);\n\tlet colArr = colStr.split(\"-\");\n\tfor(let i = 0; i < colArr.length; i++)colArr[i] = \"#\" + colArr[i];\n\treturn colArr;\n}\n\nfunction lightenColor(oldColor, amount) {\n  // Extract RGB components\n  let r = red(oldColor);\n  let g = green(oldColor);\n  let b = blue(oldColor);\n  \n  // Increase brightness\n  r += amount;\n  g += amount;\n  b += amount;\n  \n  // Ensure the values stay within the valid range (0-255)\n  r = constrain(r, 0, 255);\n  g = constrain(g, 0, 255);\n  b = constrain(b, 0, 255);\n  \n  // Return the new color\n  return color(r, g, b);\n}\n\nfunction colorToHex(color) {\n  // Extract RGB components\n  let r = red(color);\n  let g = green(color);\n  let b = blue(color);\n  \n  // Convert each component to hexadecimal and ensure two digits\n  let rHex = ('0' + r.toString(16)).slice(-2);\n  let gHex = ('0' + g.toString(16)).slice(-2);\n  let bHex = ('0' + b.toString(16)).slice(-2);\n  \n  // Concatenate and return the hexadecimal string\n  return \"#\" + rHex + gHex + bHex;\n}\n\nfunction randPattern(t)\n{\n\tconst ptArr = [\n    PTN.stripe(t / int(random(6, 12))),\n\t\tPTN.stripeCircle(t / int(random(6, 12))),\n\t\tPTN.stripePolygon(int(random(3, 7)),  int(random(6, 12))),\n\t\tPTN.stripeRadial(TAU /  int(random(6, 30))),\n\t\tPTN.wave(t / int(random(1, 3)), t / int(random(10, 20)), t / 5, t / 10),\n\t\tPTN.dot(t / 10, t / 10 * random(0.2, 1)),\n\t\tPTN.checked(t / int(random(5, 20)), t / int(random(5, 20))),\n\t\tPTN.cross(t / int(random(10, 20)), t / int(random(20, 40))),\n\t\tPTN.triangle(t / int(random(5, 20)), t / int(random(5, 20)))\n\t]\n\treturn random(ptArr);\n}\n"],"names":[],"version":3,"file":"index.ba7f5425.js.map","sourceRoot":"/__parcel_source_root/"}